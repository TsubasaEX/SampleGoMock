// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	model "SampleGoMock/model"

	mock "github.com/stretchr/testify/mock"
)

// EmployeeRepo is an autogenerated mock type for the EmployeeRepo type
type EmployeeRepo struct {
	mock.Mock
}

// FindEmployeesAgeGreaterThan provides a mock function with given fields: age
func (_m *EmployeeRepo) FindEmployeesAgeGreaterThan(age int) []model.Employee {
	ret := _m.Called(age)

	var r0 []model.Employee
	if rf, ok := ret.Get(0).(func(int) []model.Employee); ok {
		r0 = rf(age)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Employee)
		}
	}

	return r0
}

type mockConstructorTestingTNewEmployeeRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewEmployeeRepo creates a new instance of EmployeeRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEmployeeRepo(t mockConstructorTestingTNewEmployeeRepo) *EmployeeRepo {
	mock := &EmployeeRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
